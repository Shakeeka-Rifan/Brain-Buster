{"ast":null,"code":"var _jsxFileName = \"A:\\\\Brain Buster\\\\banana-brain-buster-frontend\\\\src\\\\context\\\\Musicprovider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicContext = /*#__PURE__*/createContext();\nconst MusicProvider = ({\n  children\n}) => {\n  _s();\n  const [music, setMusic] = useState(null);\n  const [isMusicOn, setIsMusicOn] = useState(false); // Add this\n\n  const startMusic = src => {\n    if (!isMusicOn) return; // Prevent playing if music is OFF\n\n    if (music) {\n      music.pause(); // Stop any existing music\n    }\n    const newMusic = new Audio(src);\n    newMusic.loop = true;\n    newMusic.play();\n    setMusic(newMusic);\n  };\n  return /*#__PURE__*/_jsxDEV(MusicContext.Provider, {\n    value: {\n      isMusicOn,\n      setIsMusicOn,\n      music,\n      setMusic,\n      startMusic\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicProvider, \"cT44gYzE4VOUHMGN3UUqeQAUbbQ=\");\n_c = MusicProvider;\nexport { MusicContext };\nexport default MusicProvider;\nvar _c;\n$RefreshReg$(_c, \"MusicProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","MusicContext","MusicProvider","children","_s","music","setMusic","isMusicOn","setIsMusicOn","startMusic","src","pause","newMusic","Audio","loop","play","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/Brain Buster/banana-brain-buster-frontend/src/context/Musicprovider.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nconst MusicContext = createContext();\r\n\r\nconst MusicProvider = ({ children }) => {\r\n  const [music, setMusic] = useState(null);\r\n  const [isMusicOn, setIsMusicOn] = useState(false); // Add this\r\n\r\n  const startMusic = (src) => {\r\n    if (!isMusicOn) return; // Prevent playing if music is OFF\r\n\r\n    if (music) {\r\n      music.pause(); // Stop any existing music\r\n    }\r\n    const newMusic = new Audio(src);\r\n    newMusic.loop = true;\r\n    newMusic.play();\r\n    setMusic(newMusic);\r\n  };\r\n\r\n  return (\r\n    <MusicContext.Provider value={{ isMusicOn, setIsMusicOn, music, setMusic, startMusic }}>\r\n      {children}\r\n    </MusicContext.Provider>\r\n  );\r\n};\r\n\r\nexport { MusicContext };\r\nexport default MusicProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;AAEpC,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMW,UAAU,GAAIC,GAAG,IAAK;IAC1B,IAAI,CAACH,SAAS,EAAE,OAAO,CAAC;;IAExB,IAAIF,KAAK,EAAE;MACTA,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB;IACA,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAACH,GAAG,CAAC;IAC/BE,QAAQ,CAACE,IAAI,GAAG,IAAI;IACpBF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACfT,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEV,SAAS;MAAEC,YAAY;MAAEH,KAAK;MAAEC,QAAQ;MAAEG;IAAW,CAAE;IAAAN,QAAA,EACpFA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,EAAA,CArBIF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAuBnB,SAASD,YAAY;AACrB,eAAeC,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}