{"ast":null,"code":"var _jsxFileName = \"A:\\\\Brain Buster\\\\banana-brain-buster-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport '../styles/Game.css'; // Import the ChooseDifficulty CSS\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // For navigation after the time is up\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(30); // Default time for Easy level (should be set dynamically based on level)\n  const [score, setScore] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null); // To track whether answer is correct or not\n  const [showPopUp, setShowPopUp] = useState(false); // To control pop-up visibility\n  const navigate = useNavigate(); // For navigation\n\n  // Function to handle timeouts when time is up\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setFeedback(\"Time's up! ❌\");\n      setIsGameOver(true); // When time is up, stop the game\n    } else {\n      const timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(timer); // Cleanup the timer\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    fetchQuestion(); // Initial question fetch\n  }, []);\n\n  // Fetch question from API\n  const fetchQuestion = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/banana\");\n      setQuestion(res.data.question);\n      setAnswer(res.data.solution);\n      setFeedback(\"\");\n      setIsCorrect(null); // Reset the result status\n      setShowPopUp(false); // Hide the pop-up\n    } catch (err) {\n      console.error(\"Error fetching question\", err);\n    }\n  };\n\n  // Check if the answer is correct\n  const checkAnswer = () => {\n    if (parseInt(userAnswer) === parseInt(answer)) {\n      setIsCorrect(true);\n      setFeedback(\"Correct! 🎉\");\n      setScore(score + 10); // Increase score by 10\n    } else {\n      setIsCorrect(false);\n      setFeedback(\"Wrong! ❌\");\n    }\n    setShowPopUp(true); // Show the pop-up after answering\n  };\n\n  // Handle play again after \"Time's Up!\" or incorrect answer\n  const playAgain = () => {\n    setIsGameOver(false);\n    setScore(0);\n    setTimeLeft(30); // Reset time to default (could be dynamic based on difficulty)\n    fetchQuestion(); // Fetch new question\n    setUserAnswer(\"\");\n  };\n\n  // Handle navigation to Main Menu\n  const goToMainMenu = () => {\n    navigate(\"/mainmenu\");\n  };\n\n  // Handle going to next question\n  const nextQuestion = () => {\n    setShowPopUp(false);\n    fetchQuestion(); // Fetch new question after correct answer\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Math Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Left: \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: question,\n      alt: \"Math Question\",\n      style: {\n        maxWidth: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: userAnswer,\n      onChange: e => setUserAnswer(e.target.value),\n      disabled: isGameOver // Disable input if game is over\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswer,\n      disabled: isGameOver,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToMainMenu,\n      children: \"Main Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), showPopUp && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Heyyy! Congratulations \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Points earned: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Oops! You lose! \\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playAgain,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), isGameOver && !showPopUp && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Time's up! \\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playAgain,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"UXWo1g5xPCp+FSbkJ4xGt75Y3DA=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","question","setQuestion","answer","setAnswer","userAnswer","setUserAnswer","feedback","setFeedback","timeLeft","setTimeLeft","score","setScore","isGameOver","setIsGameOver","isCorrect","setIsCorrect","showPopUp","setShowPopUp","navigate","timer","setInterval","prevTime","clearInterval","fetchQuestion","res","get","data","solution","err","console","error","checkAnswer","parseInt","playAgain","goToMainMenu","nextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","type","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["A:/Brain Buster/banana-brain-buster-frontend/src/components/Game.js"],"sourcesContent":["import '../styles/Game.css';  // Import the ChooseDifficulty CSS\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // For navigation after the time is up\r\n\r\nfunction Game() {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [timeLeft, setTimeLeft] = useState(30); // Default time for Easy level (should be set dynamically based on level)\r\n  const [score, setScore] = useState(0);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(null); // To track whether answer is correct or not\r\n  const [showPopUp, setShowPopUp] = useState(false); // To control pop-up visibility\r\n  const navigate = useNavigate(); // For navigation\r\n\r\n  // Function to handle timeouts when time is up\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setFeedback(\"Time's up! ❌\");\r\n      setIsGameOver(true); // When time is up, stop the game\r\n    } else {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer); // Cleanup the timer\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  useEffect(() => {\r\n    fetchQuestion(); // Initial question fetch\r\n  }, []);\r\n\r\n  // Fetch question from API\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/api/banana\");\r\n      setQuestion(res.data.question);\r\n      setAnswer(res.data.solution);\r\n      setFeedback(\"\");\r\n      setIsCorrect(null); // Reset the result status\r\n      setShowPopUp(false); // Hide the pop-up\r\n    } catch (err) {\r\n      console.error(\"Error fetching question\", err);\r\n    }\r\n  };\r\n\r\n  // Check if the answer is correct\r\n  const checkAnswer = () => {\r\n    if (parseInt(userAnswer) === parseInt(answer)) {\r\n      setIsCorrect(true);\r\n      setFeedback(\"Correct! 🎉\");\r\n      setScore(score + 10); // Increase score by 10\r\n    } else {\r\n      setIsCorrect(false);\r\n      setFeedback(\"Wrong! ❌\");\r\n    }\r\n    setShowPopUp(true); // Show the pop-up after answering\r\n  };\r\n\r\n  // Handle play again after \"Time's Up!\" or incorrect answer\r\n  const playAgain = () => {\r\n    setIsGameOver(false);\r\n    setScore(0);\r\n    setTimeLeft(30); // Reset time to default (could be dynamic based on difficulty)\r\n    fetchQuestion(); // Fetch new question\r\n    setUserAnswer(\"\");\r\n  };\r\n\r\n  // Handle navigation to Main Menu\r\n  const goToMainMenu = () => {\r\n    navigate(\"/mainmenu\");\r\n  };\r\n\r\n  // Handle going to next question\r\n  const nextQuestion = () => {\r\n    setShowPopUp(false);\r\n    fetchQuestion(); // Fetch new question after correct answer\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h2>Math Game</h2>\r\n      <p>Time Left: {timeLeft}s</p>\r\n      <p>Score: {score}</p>\r\n\r\n      {/* Question Image */}\r\n      <img src={question} alt=\"Math Question\" style={{ maxWidth: \"300px\" }} />\r\n\r\n      {/* Answer Input */}\r\n      <input\r\n        type=\"number\"\r\n        value={userAnswer}\r\n        onChange={(e) => setUserAnswer(e.target.value)}\r\n        disabled={isGameOver} // Disable input if game is over\r\n      />\r\n      <button onClick={checkAnswer} disabled={isGameOver}>\r\n        Submit\r\n      </button>\r\n\r\n      {/* Feedback */}\r\n      <p>{feedback}</p>\r\n\r\n      {/* Main Menu Button */}\r\n      <button onClick={goToMainMenu}>Main Menu</button>\r\n\r\n      {/* Correct / Incorrect Answer Pop-up */}\r\n      {showPopUp && (\r\n        <div className=\"popup\">\r\n          {isCorrect ? (\r\n            <>\r\n              <p>Heyyy! Congratulations 🎉</p>\r\n              <p>Points earned: {score}</p>\r\n              <button onClick={nextQuestion}>Next Question</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>Oops! You lose! ❌</p>\r\n              <button onClick={playAgain}>Try Again</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Time's Up Pop-up */}\r\n      {isGameOver && !showPopUp && (\r\n        <div className=\"popup\">\r\n          <p>Time's up! ❌</p>\r\n          <p>Your score: {score} points</p>\r\n          <button onClick={playAgain}>Play Again</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}