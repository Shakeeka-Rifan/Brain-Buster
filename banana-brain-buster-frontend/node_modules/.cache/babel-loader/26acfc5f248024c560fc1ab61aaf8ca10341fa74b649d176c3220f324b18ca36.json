{"ast":null,"code":"var _jsxFileName = \"A:\\\\Brain Buster\\\\banana-brain-buster-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // For navigation after the time is up\nimport '../styles/Game.css'; // Import the ChooseDifficulty CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(30); // Default time for Easy level (should be set dynamically based on level)\n  const [score, setScore] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const navigate = useNavigate(); // To navigate after time is over\n\n  // Function to handle timeouts when time is up\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setFeedback(\"Time's up! ‚ùå\");\n      setIsGameOver(true); // When time is up, stop the game\n    } else {\n      const timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(timer); // Cleanup the timer\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    fetchQuestion(); // Initial question fetch\n  }, []);\n\n  // Fetch question from API\n  const fetchQuestion = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/banana\");\n      setQuestion(res.data.question);\n      setAnswer(res.data.solution);\n      setFeedback(\"\");\n    } catch (err) {\n      console.error(\"Error fetching question\", err);\n    }\n  };\n\n  // Check if the answer is correct\n  const checkAnswer = () => {\n    if (parseInt(userAnswer) === parseInt(answer)) {\n      setFeedback(\"Correct! üéâ\");\n      setScore(score + 10); // Increase score by 10\n      fetchQuestion(); // Fetch a new question\n      setUserAnswer(\"\"); // Clear input after each submission\n    } else {\n      setFeedback(\"Wrong! ‚ùå\");\n    }\n  };\n\n  // Play again function when time is up\n  const playAgain = () => {\n    setIsGameOver(false);\n    setScore(0);\n    setTimeLeft(30); // Reset time to default (could be dynamic based on difficulty)\n    fetchQuestion(); // Fetch new question\n    setUserAnswer(\"\");\n  };\n\n  // Navigate to Main Menu\n  const goToMainMenu = () => {\n    navigate(\"/mainmenu\"); // Redirect to MainMenu page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Math Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Left: \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: question,\n      alt: \"Math Question\",\n      style: {\n        maxWidth: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: userAnswer,\n      onChange: e => setUserAnswer(e.target.value),\n      disabled: isGameOver // Disable input if game is over\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswer,\n      disabled: isGameOver,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToMainMenu,\n      children: \"Main Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Time's up! \\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playAgain,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"CwM45DCGKeIWSXw08qajbGesNeU=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Game","_s","question","setQuestion","answer","setAnswer","userAnswer","setUserAnswer","feedback","setFeedback","timeLeft","setTimeLeft","score","setScore","isGameOver","setIsGameOver","navigate","timer","setInterval","prevTime","clearInterval","fetchQuestion","res","get","data","solution","err","console","error","checkAnswer","parseInt","playAgain","goToMainMenu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","type","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["A:/Brain Buster/banana-brain-buster-frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // For navigation after the time is up\r\nimport '../styles/Game.css';  // Import the ChooseDifficulty CSS\r\n\r\nfunction Game() {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [timeLeft, setTimeLeft] = useState(30); // Default time for Easy level (should be set dynamically based on level)\r\n  const [score, setScore] = useState(0);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const navigate = useNavigate(); // To navigate after time is over\r\n\r\n  // Function to handle timeouts when time is up\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setFeedback(\"Time's up! ‚ùå\");\r\n      setIsGameOver(true); // When time is up, stop the game\r\n    } else {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer); // Cleanup the timer\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  useEffect(() => {\r\n    fetchQuestion(); // Initial question fetch\r\n  }, []);\r\n\r\n  // Fetch question from API\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/api/banana\");\r\n      setQuestion(res.data.question);\r\n      setAnswer(res.data.solution);\r\n      setFeedback(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error fetching question\", err);\r\n    }\r\n  };\r\n\r\n  // Check if the answer is correct\r\n  const checkAnswer = () => {\r\n    if (parseInt(userAnswer) === parseInt(answer)) {\r\n      setFeedback(\"Correct! üéâ\");\r\n      setScore(score + 10); // Increase score by 10\r\n      fetchQuestion(); // Fetch a new question\r\n      setUserAnswer(\"\"); // Clear input after each submission\r\n    } else {\r\n      setFeedback(\"Wrong! ‚ùå\");\r\n    }\r\n  };\r\n\r\n  // Play again function when time is up\r\n  const playAgain = () => {\r\n    setIsGameOver(false);\r\n    setScore(0);\r\n    setTimeLeft(30); // Reset time to default (could be dynamic based on difficulty)\r\n    fetchQuestion(); // Fetch new question\r\n    setUserAnswer(\"\");\r\n  };\r\n\r\n  // Navigate to Main Menu\r\n  const goToMainMenu = () => {\r\n    navigate(\"/mainmenu\"); // Redirect to MainMenu page\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h2>Math Game</h2>\r\n      <p>Time Left: {timeLeft}s</p>\r\n      <p>Score: {score}</p>\r\n\r\n      {/* Question Image */}\r\n      <img src={question} alt=\"Math Question\" style={{ maxWidth: \"300px\" }} />\r\n\r\n      {/* Answer Input */}\r\n      <input\r\n        type=\"number\"\r\n        value={userAnswer}\r\n        onChange={(e) => setUserAnswer(e.target.value)}\r\n        disabled={isGameOver} // Disable input if game is over\r\n      />\r\n      <button onClick={checkAnswer} disabled={isGameOver}>\r\n        Submit\r\n      </button>\r\n\r\n      {/* Feedback */}\r\n      <p>{feedback}</p>\r\n\r\n      {/* Main Menu Button */}\r\n      <button onClick={goToMainMenu}>Main Menu</button>\r\n\r\n      {/* Time's Up Popup */}\r\n      {isGameOver && (\r\n        <div className=\"popup\">\r\n          <p>Time's up! ‚ùå</p>\r\n          <p>Your score: {score} points</p>\r\n          <button onClick={playAgain}>Play Again</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}